package com.moons.xst.track.dao;

import java.util.List;

import com.moons.xst.sqlite.WorkBillSession;
import com.moons.xst.sqlite.WorkResultSession;
import com.moons.xst.track.bean.Work_Detail_Bill;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/**
 * DAO for table WORK_DETAIL_BILL.
 */
public class Work_Detail_BillDao extends AbstractDao<Work_Detail_Bill, String> {

	public static final String TABLENAME = "Work_Detail_Bill";

	/**
	 * Properties of entity Work_Detail_Bill.<br/>
	 * Can be used for QueryBuilder and for referencing column names.
	 */
	public static class Properties {
		public final static Property Work_Bill_Item_ID = new Property(0,
				String.class, "Work_Bill_Item_ID", true, "Work_Bill_Item_ID");
		public final static Property Work_Bill_ID = new Property(1,
				Integer.class, "Work_Bill_ID", false, "Work_Bill_ID");
		public final static Property Work_Bill_Item_DataType_CD = new Property(
				2, String.class, "Work_Bill_Item_DataType_CD", false,
				"Work_Bill_Item_DataType_CD");
		public final static Property Work_Bill_Item_ItemTitleA = new Property(
				3, String.class, "Work_Bill_Item_ItemTitleA", false,
				"Work_Bill_Item_ItemTitleA");
		public final static Property Work_Bill_Item_ItemTitleB = new Property(
				4, String.class, "Work_Bill_Item_ItemTitleB", false,
				"Work_Bill_Item_ItemTitleB");
		public final static Property Work_Bill_Item_AQCS1_TX = new Property(5,
				String.class, "Work_Bill_Item_AQCS1_TX", false,
				"Work_Bill_Item_AQCS1_TX");
		public final static Property Work_Bill_Item_AQCS2_TX = new Property(6,
				String.class, "Work_Bill_Item_AQCS2_TX", false,
				"Work_Bill_Item_AQCS2_TX");
		public final static Property Work_Bill_Item_AQCS3_TX = new Property(7,
				String.class, "Work_Bill_Item_AQCS3_TX", false,
				"Work_Bill_Item_AQCS3_TX");
		public final static Property Work_Bill_Item_AQCS4_TX = new Property(8,
				String.class, "Work_Bill_Item_AQCS4_TX", false,
				"Work_Bill_Item_AQCS4_TX");
		public final static Property Work_Bill_Item_Exe_Time = new Property(9,
				String.class, "Work_Bill_Item_Exe_Time", false,
				"Work_Bill_Item_Exe_Time");
		public final static Property Work_Bill_Item_Order = new Property(10,
				Integer.class, "Work_Bill_Item_Order", false,
				"Work_Bill_Item_Order");
		public final static Property Work_Bill_Item_State = new Property(11,
				Integer.class, "Work_Bill_Item_State", false,
				"Work_Bill_Item_State");
		public final static Property Work_Bill_Item_UCSettingID = new Property(
				12, Integer.class, "Work_Bill_Item_UCSettingID", false,
				"Work_Bill_Item_UCSettingID");
	};

	public Work_Detail_BillDao(DaoConfig config) {
		super(config);
	}

	public Work_Detail_BillDao(DaoConfig config, WorkBillSession daoSession) {
		super(config, daoSession);
	}

	public Work_Detail_BillDao(DaoConfig config, WorkResultSession daoSession) {
		super(config, daoSession);
	}

	/** Creates the underlying database table. */
	public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
		String constraint = ifNotExists ? "IF NOT EXISTS " : "";
		db.execSQL("CREATE TABLE "
				+ constraint
				+ "'WORK_DETAIL_BILL' ("
				+ //
				"'Work_Bill_Item_ID' TEXT PRIMARY KEY NOT NULL ,"
				+ // 0:
					// Work_Bill_Item_ID
				"'Work_Bill_ID' INTEGER,"
				+ // 1: Work_Bill_ID
				"'Work_Bill_Item_DataType_CD' TEXT,"
				+ // 2:
					// Work_Bill_Item_DataType_CD
				"'Work_Bill_Item_ItemTitleA' TEXT,"
				+ // 3:
				// Work_Bill_Item_ItemTitleA
				"'Work_Bill_Item_ItemTitleB' TEXT,"
				+ // 4:
				// Work_Bill_Item_ItemTitleB
				"'Work_Bill_Item_AQCS1_TX' TEXT,"
				+ // 5:
					// Work_Bill_Item_AQCS1_TX
				"'Work_Bill_Item_AQCS2_TX' TEXT,"
				+ // 6:
					// Work_Bill_Item_AQCS2_TX
				"'Work_Bill_Item_AQCS3_TX' TEXT,"
				+ // 7:
					// Work_Bill_Item_AQCS3_TX
				"'Work_Bill_Item_AQCS4_TX' TEXT,"
				+ // 8:
					// Work_Bill_Item_AQCS4_TX
				"'Work_Bill_Item_Exe_Time' TEXT,"
				+ // 9:
					// Work_Bill_Item_Exe_Time
				"'Work_Bill_Item_Order' INTEGER,"
				+ // 10: Work_Bill_Item_Order
				"'Work_Bill_Item_State' TEXT,"
				+ "'Work_Bill_Item_UCSettingID' INTEGER);");
	}

	/** Drops the underlying database table. */
	public static void dropTable(SQLiteDatabase db, boolean ifExists) {
		String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "")
				+ "'WORK_DETAIL_BILL'";
		db.execSQL(sql);
	}

	// 根据工作id获取所有隔离措施
	public List<Work_Detail_Bill> selectMeasureClause(int workId) {
		String sql = "SELECT * from Work_Detail_Bill WHERE Work_Bill_ID ='"
				+ workId + "'";
		Cursor cursor = db.rawQuery(sql, null);
		return loadAllAndCloseCursor(cursor);
	}

	// 根据工作id和order获取单条隔离措施
	public List<Work_Detail_Bill> selectMeasureDetail(int workId, int order) {
		String sql = "SELECT * from Work_Detail_Bill WHERE Work_Bill_ID='"
				+ workId + "' and Work_Bill_Item_Order='" + order + "'";
		Cursor cursor = db.rawQuery(sql, null);
		return loadAllAndCloseCursor(cursor);
	}

	// 保存隔离措施详情
	public void saveMeasureDetail(String itemId, String time, String state) {
		String sql = "UPDATE Work_Detail_Bill set Work_Bill_Item_State='"
				+ state + "' , Work_Bill_Item_Exe_Time='" + time
				+ "' WHERE Work_Bill_Item_ID='" + itemId + "'";
		db.execSQL(sql);
	}

	// 还原工作详情
	public void restoreWorkDetail(int workId) {
		String sql = "UPDATE Work_Detail_Bill set Work_Bill_Item_State=null,Work_Bill_Item_Exe_Time=null WHERE Work_Bill_ID='"
				+ workId + "'";
		db.execSQL(sql);
	}

	/** @inheritdoc */
	@Override
	protected void bindValues(SQLiteStatement stmt, Work_Detail_Bill entity) {
		stmt.clearBindings();
		stmt.bindString(1, entity.getWork_Bill_Item_ID());

		Integer Work_Bill_ID = entity.getWork_Bill_ID();
		if (Work_Bill_ID != null) {
			stmt.bindLong(2, Work_Bill_ID);
		}

		String Work_Bill_Item_DataType_CD = entity
				.getWork_Bill_Item_DataType_CD();
		if (Work_Bill_Item_DataType_CD != null) {
			stmt.bindString(3, Work_Bill_Item_DataType_CD);
		}

		String Work_Bill_Item_ItemTitleA = entity
				.getWork_Bill_Item_ItemTitleA();
		if (Work_Bill_Item_ItemTitleA != null) {
			stmt.bindString(4, Work_Bill_Item_ItemTitleA);
		}
		String Work_Bill_Item_ItemTitleB = entity
				.getWork_Bill_Item_ItemTitleB();
		if (Work_Bill_Item_ItemTitleB != null) {
			stmt.bindString(5, Work_Bill_Item_ItemTitleB);
		}

		String Work_Bill_Item_AQCS1_TX = entity.getWork_Bill_Item_AQCS1_TX();
		if (Work_Bill_Item_AQCS1_TX != null) {
			stmt.bindString(6, Work_Bill_Item_AQCS1_TX);
		}

		String Work_Bill_Item_AQCS2_TX = entity.getWork_Bill_Item_AQCS2_TX();
		if (Work_Bill_Item_AQCS2_TX != null) {
			stmt.bindString(7, Work_Bill_Item_AQCS2_TX);
		}

		String Work_Bill_Item_AQCS3_TX = entity.getWork_Bill_Item_AQCS3_TX();
		if (Work_Bill_Item_AQCS3_TX != null) {
			stmt.bindString(8, Work_Bill_Item_AQCS3_TX);
		}

		String Work_Bill_Item_AQCS4_TX = entity.getWork_Bill_Item_AQCS4_TX();
		if (Work_Bill_Item_AQCS4_TX != null) {
			stmt.bindString(9, Work_Bill_Item_AQCS4_TX);
		}

		String Work_Bill_Item_Exe_Time = entity.getWork_Bill_Item_Exe_Time();
		if (Work_Bill_Item_Exe_Time != null) {
			stmt.bindString(10, Work_Bill_Item_Exe_Time);
		}

		Integer Work_Bill_Item_Order = entity.getWork_Bill_Item_Order();
		if (Work_Bill_Item_Order != null) {
			stmt.bindLong(11, Work_Bill_Item_Order);
		}

		String Work_Bill_Item_State = entity.getWork_Bill_Item_State();
		if (Work_Bill_Item_State != null) {
			stmt.bindString(12, Work_Bill_Item_State);
		}

		Integer Work_Bill_Item_UCSettingID = entity
				.getWork_Bill_Item_UCSettingID();
		if (Work_Bill_Item_UCSettingID != null) {
			stmt.bindLong(13, Work_Bill_Item_UCSettingID);
		}
	}

	/** @inheritdoc */
	@Override
	public String readKey(Cursor cursor, int offset) {
		return cursor.getString(offset + 0);
	}

	/** @inheritdoc */
	@Override
	public Work_Detail_Bill readEntity(Cursor cursor, int offset) {
		Work_Detail_Bill entity = new Work_Detail_Bill(
				//
				cursor.getString(offset + 0), // Work_Bill_Item_ID
				cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1), // Work_Bill_ID
				cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // Work_Bill_Item_DataType_CD
				cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3),
				cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4),
				cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // Work_Bill_Item_AQCS1_TX
				cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // Work_Bill_Item_AQCS2_TX
				cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // Work_Bill_Item_AQCS3_TX
				cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // Work_Bill_Item_AQCS4_TX
				cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // Work_Bill_Item_Exe_Time
				cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10), // Work_Bill_Item_Order
				cursor.isNull(offset + 11) ? null : cursor
						.getString(offset + 11), // Work_Bill_Item_State
				cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12));
		return entity;
	}

	/** @inheritdoc */
	@Override
	public void readEntity(Cursor cursor, Work_Detail_Bill entity, int offset) {
		entity.setWork_Bill_Item_ID(cursor.getString(offset + 0));
		entity.setWork_Bill_ID(cursor.isNull(offset + 1) ? null : cursor
				.getInt(offset + 1));
		entity.setWork_Bill_Item_DataType_CD(cursor.isNull(offset + 2) ? null
				: cursor.getString(offset + 2));
		entity.setWork_Bill_Item_ItemTitleA(cursor.isNull(offset + 3) ? null
				: cursor.getString(offset + 3));
		entity.setWork_Bill_Item_ItemTitleB(cursor.isNull(offset + 4) ? null
				: cursor.getString(offset + 4));
		entity.setWork_Bill_Item_AQCS1_TX(cursor.isNull(offset + 5) ? null
				: cursor.getString(offset + 5));
		entity.setWork_Bill_Item_AQCS2_TX(cursor.isNull(offset + 6) ? null
				: cursor.getString(offset + 6));
		entity.setWork_Bill_Item_AQCS3_TX(cursor.isNull(offset + 7) ? null
				: cursor.getString(offset + 7));
		entity.setWork_Bill_Item_AQCS4_TX(cursor.isNull(offset + 8) ? null
				: cursor.getString(offset + 8));
		entity.setWork_Bill_Item_Exe_Time(cursor.isNull(offset + 9) ? null
				: cursor.getString(offset + 9));
		entity.setWork_Bill_Item_Order(cursor.isNull(offset + 10) ? null
				: cursor.getInt(offset + 10));
		entity.setWork_Bill_Item_State(cursor.isNull(offset + 11) ? null
				: cursor.getString(offset + 11));
		entity.setWork_Bill_Item_UCSettingID(cursor.isNull(offset + 12) ? null
				: cursor.getInt(offset + 12));
	}

	/** @inheritdoc */
	@Override
	protected String updateKeyAfterInsert(Work_Detail_Bill entity, long rowId) {
		return entity.getWork_Bill_Item_ID();
	}

	/** @inheritdoc */
	@Override
	public String getKey(Work_Detail_Bill entity) {
		if (entity != null) {
			return entity.getWork_Bill_Item_ID();
		} else {
			return null;
		}
	}

	/** @inheritdoc */
	@Override
	protected boolean isEntityUpdateable() {
		return true;
	}

}
