package com.moons.xst.track.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import com.moons.xst.sqlite.DJDAOSession;
import com.moons.xst.track.bean.GPSMobjectBugResult;
import com.moons.xst.track.bean.GPSMobjectBugResultHis;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;


// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table GPSMOBJECT_BUG_RESULT_HIS.
*/
public class GPSMobjectBugResultHisDao extends AbstractDao<GPSMobjectBugResultHis, Void> {

    public static final String TABLENAME = "GPSMOBJECTBUGRESULTHIS";

    /**
     * Properties of entity GPSMobjectBugResultHis.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Result_ID = new Property(0, String.class, "Result_ID", false, "RESULT_ID");
        public final static Property Type_ID = new Property(1, int.class, "Type_ID", false, "TYPE_ID");
        public final static Property GZDM_ID = new Property(2, int.class, "GZDM_ID", false, "GZDM_ID");
        public final static Property ZZDM_ID = new Property(3, int.class, "ZZDM_ID", false, "ZZDM_ID");
        public final static Property YYDM_ID = new Property(4, int.class, "YYDM_ID", false, "YYDM_ID");
        public final static Property CSDM_ID = new Property(5, int.class, "CSDM_ID", false, "CSDM_ID");
        public final static Property GPSPoint_ID = new Property(6, int.class, "GPSPoint_ID", false, "GPSPOINT_ID");
        public final static Property BugMemo_TX = new Property(7, String.class, "BugMemo_TX", false, "BUGMEMO_TX");
        public final static Property Find_TM = new Property(8, java.util.Date.class, "Find_TM", false, "FIND_TM");
        public final static Property Post_ID = new Property(9, int.class, "Post_ID", false, "POST_ID");
        public final static Property FindUser_TX = new Property(10, String.class, "FindUser_TX", false, "FINDUSER_TX");
        public final static Property Longitude = new Property(11, String.class, "Longitude", false, "LONGITUDE");
        public final static Property Latitude = new Property(12, String.class, "Latitude", false, "LATITUDE");
    };


    public GPSMobjectBugResultHisDao(DaoConfig config) {
        super(config);
    }
    
    public GPSMobjectBugResultHisDao(DaoConfig config, DJDAOSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'GPSMOBJECT_BUG_RESULT_HIS' (" + //
                "'RESULT_ID' TEXT NOT NULL ," + // 0: Result_ID
                "'TYPE_ID' INTEGER NOT NULL ," + // 1: Type_ID
                "'GZDM_ID' INTEGER NOT NULL ," + // 2: GZDM_ID
                "'ZZDM_ID' INTEGER NOT NULL ," + // 3: ZZDM_ID
                "'YYDM_ID' INTEGER NOT NULL ," + // 4: YYDM_ID
                "'CSDM_ID' INTEGER NOT NULL ," + // 5: CSDM_ID
                "'GPSPOINT_ID' INTEGER NOT NULL ," + // 6: GPSPoint_ID
                "'BUG_MEMO_TX' TEXT," + // 7: BugMemo_TX
                "'FIND_TM' INTEGER NOT NULL ," + // 8: Find_TM
                "'POST_ID' INTEGER NOT NULL ," + // 9: Post_ID
                "'FIND_USER_TX' TEXT NOT NULL ," + // 10: FindUser_TX
                "'LONGITUDE' TEXT NOT NULL ," + // 11: Longitude
                "'LATITUDE' TEXT NOT NULL );"); // 12: Latitude
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'GPSMOBJECT_BUG_RESULT_HIS'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, GPSMobjectBugResultHis entity) {
        stmt.clearBindings();
        stmt.bindString(1, entity.getResult_ID());
        stmt.bindLong(2, entity.getType_ID());
        stmt.bindLong(3, entity.getGZDM_ID());
        stmt.bindLong(4, entity.getZZDM_ID());
        stmt.bindLong(5, entity.getYYDM_ID());
        stmt.bindLong(6, entity.getCSDM_ID());
        stmt.bindLong(7, entity.getGPSPoint_ID());
 
        String BugMemo_TX = entity.getBugMemo_TX();
        if (BugMemo_TX != null) {
            stmt.bindString(8, BugMemo_TX);
        }
        stmt.bindString(9, entity.getFind_TM());
        stmt.bindLong(10, entity.getPost_ID());
        stmt.bindString(11, entity.getFindUser_TX());
        stmt.bindString(12, entity.getLongitude());
        stmt.bindString(13, entity.getLatitude());
    }

    /** @inheritdoc */
    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    /** @inheritdoc */
    @Override
    public GPSMobjectBugResultHis readEntity(Cursor cursor, int offset) {
        GPSMobjectBugResultHis entity = new GPSMobjectBugResultHis( //
            cursor.getString(offset + 0), // Result_ID
            cursor.getInt(offset + 1), // Type_ID
            cursor.getInt(offset + 2), // GZDM_ID
            cursor.getInt(offset + 3), // ZZDM_ID
            cursor.getInt(offset + 4), // YYDM_ID
            cursor.getInt(offset + 5), // CSDM_ID
            cursor.getInt(offset + 6), // GPSPoint_ID
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // BugMemo_TX
            cursor.getString(offset + 8), // Find_TM
            cursor.getInt(offset + 9), // Post_ID
            cursor.getString(offset + 10), // FindUser_TX
            cursor.getString(offset + 11), // Longitude
            cursor.getString(offset + 12) // Latitude
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, GPSMobjectBugResultHis entity, int offset) {
        entity.setResult_ID(cursor.getString(offset + 0));
        entity.setType_ID(cursor.getInt(offset + 1));
        entity.setGZDM_ID(cursor.getInt(offset + 2));
        entity.setZZDM_ID(cursor.getInt(offset + 3));
        entity.setYYDM_ID(cursor.getInt(offset + 4));
        entity.setCSDM_ID(cursor.getInt(offset + 5));
        entity.setGPSPoint_ID(cursor.getInt(offset + 6));
        entity.setBugMemo_TX(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setFind_TM(cursor.getString(offset + 8));
        entity.setPost_ID(cursor.getInt(offset + 9));
        entity.setFindUser_TX(cursor.getString(offset + 10));
        entity.setLongitude(cursor.getString(offset + 11));
        entity.setLatitude(cursor.getString(offset + 12));
     }
    
    /** @inheritdoc */
    @Override
    protected Void updateKeyAfterInsert(GPSMobjectBugResultHis entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    /** @inheritdoc */
    @Override
    public Void getKey(GPSMobjectBugResultHis entity) {
        return null;
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
    public long insertGPSMobjectBugResult(GPSMobjectBugResult entity) {
    	GPSMobjectBugResultHis entityHis = new GPSMobjectBugResultHis();
    	entityHis.setResult_ID(entity.getResult_ID());
    	entityHis.setType_ID(entity.getType_ID());
    	entityHis.setGZDM_ID(entity.getGZDM_ID());
    	entityHis.setZZDM_ID(entity.getZZDM_ID());
    	entityHis.setYYDM_ID(entity.getYYDM_ID());
    	entityHis.setCSDM_ID(entity.getCSDM_ID());
    	entityHis.setGPSPoint_ID(entity.getGPSPoint_ID());
    	entityHis.setBugMemo_TX(entity.getBugMemo_TX());
    	entityHis.setFind_TM(entity.getFind_TM());
    	entityHis.setPost_ID(entity.getPost_ID());
        entityHis.setFindUser_TX(entity.getFindUser_TX());
        entityHis.setLongitude(entity.getLongitude());
        entityHis.setLatitude(entity.getLatitude());
        return this.insert(entityHis);
    }
    
}
