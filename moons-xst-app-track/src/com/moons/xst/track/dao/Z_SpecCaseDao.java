package com.moons.xst.track.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import com.moons.xst.sqlite.DJDAOSession;
import com.moons.xst.track.bean.Z_SpecCase;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

/**
 * 计划库--特巡条件
 */
// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/**
 * DAO for table Z_SPEC_CASE.
 */
public class Z_SpecCaseDao extends AbstractDao<Z_SpecCase, Void> {

	public static final String TABLENAME = "Z_SPECCASE";

	/**
	 * Properties of entity Z_SpecCase.<br/>
	 * Can be used for QueryBuilder and for referencing column names.
	 */
	public static class Properties {
		public final static Property SpecCase_ID = new Property(0,
				String.class, "SpecCase_ID", false, "SPECCASE_ID");
		public final static Property Name_TX = new Property(1, String.class,
				"Name_TX", false, "NAME_TX");
	};

	public Z_SpecCaseDao(DaoConfig config) {
		super(config);
	}

	public Z_SpecCaseDao(DaoConfig config, DJDAOSession daoSession) {
		super(config, daoSession);
	}

	/** Creates the underlying database table. */
	public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
		String constraint = ifNotExists ? "IF NOT EXISTS " : "";
		db.execSQL("CREATE TABLE " + constraint + "'Z_SPEC_CASE' (" + //
				"'SPEC_CASE_ID' TEXT NOT NULL ," + // 0: SpecCase_ID
				"'NAME_TX' TEXT NOT NULL );"); // 1: Name_TX
	}

	/** Drops the underlying database table. */
	public static void dropTable(SQLiteDatabase db, boolean ifExists) {
		String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "")
				+ "'Z_SPEC_CASE'";
		db.execSQL(sql);
	}

	/** @inheritdoc */
	@Override
	protected void bindValues(SQLiteStatement stmt, Z_SpecCase entity) {
		stmt.clearBindings();
		stmt.bindString(1, entity.getSpecCase_ID());
		stmt.bindString(2, entity.getName_TX());
	}

	/** @inheritdoc */
	@Override
	public Void readKey(Cursor cursor, int offset) {
		return null;
	}

	/** @inheritdoc */
	@Override
	public Z_SpecCase readEntity(Cursor cursor, int offset) {
		Z_SpecCase entity = new Z_SpecCase( //
				cursor.getString(offset + 0), // SpecCase_ID
				cursor.getString(offset + 1) // Name_TX
		);
		return entity;
	}

	/** @inheritdoc */
	@Override
	public void readEntity(Cursor cursor, Z_SpecCase entity, int offset) {
		entity.setSpecCase_ID(cursor.getString(offset + 0));
		entity.setName_TX(cursor.getString(offset + 1));
	}

	/** @inheritdoc */
	@Override
	protected Void updateKeyAfterInsert(Z_SpecCase entity, long rowId) {
		// Unsupported or missing PK type
		return null;
	}

	/** @inheritdoc */
	@Override
	public Void getKey(Z_SpecCase entity) {
		return null;
	}

	/** @inheritdoc */
	@Override
	protected boolean isEntityUpdateable() {
		return true;
	}

	public Cursor getSpecCase() {
		String sqlString = "select * from Z_SpecCase ";
		return db.rawQuery(sqlString, null);
	}
}
