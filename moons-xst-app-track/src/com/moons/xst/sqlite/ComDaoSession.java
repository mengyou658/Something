package com.moons.xst.sqlite;

import java.util.Map;

import android.database.sqlite.SQLiteDatabase;

import com.moons.xst.track.bean.ComGPSPosition;
import com.moons.xst.track.bean.GPSMobjectBugResult;
import com.moons.xst.track.bean.GPSMobjectBugResultForFiles;
import com.moons.xst.track.bean.GPSXXTempTask;
import com.moons.xst.track.dao.ComGPSPositionDao;
import com.moons.xst.track.dao.GPSMobjectBugResultDao;
import com.moons.xst.track.dao.GPSMobjectBugResultForFilesDao;
import com.moons.xst.track.dao.GPSXXTempTaskDao;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class ComDaoSession extends AbstractDaoSession {

    private final DaoConfig tempGPSTask_IDDaoConfig;
    private final DaoConfig gPSPositionDaoConfig;
    private final DaoConfig gPSMobjectBugResultDaoConfig;
    private final DaoConfig gpsMobjectBugResultForFilesDaoConfig;

    private final GPSXXTempTaskDao GPSXXTempTaskDao;
    private final ComGPSPositionDao gPSPositionDao;
    private final GPSMobjectBugResultDao gPSMobjectBugResultDao;
	private final GPSMobjectBugResultForFilesDao gpsMobjectBugResultForFilesDao;

    public ComDaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        tempGPSTask_IDDaoConfig = daoConfigMap.get(GPSXXTempTaskDao.class).clone();
        tempGPSTask_IDDaoConfig.initIdentityScope(type);
        
        gPSPositionDaoConfig = daoConfigMap.get(ComGPSPositionDao.class).clone();
        gPSPositionDaoConfig.initIdentityScope(type);

		gPSMobjectBugResultDaoConfig = daoConfigMap.get(GPSMobjectBugResultDao.class).clone();
		gPSMobjectBugResultDaoConfig.initIdentityScope(type);
		
		gpsMobjectBugResultForFilesDaoConfig = daoConfigMap.get(GPSMobjectBugResultForFilesDao.class).clone();
		gpsMobjectBugResultForFilesDaoConfig.initIdentityScope(type);
		
        GPSXXTempTaskDao = new GPSXXTempTaskDao(tempGPSTask_IDDaoConfig, this);
        gPSPositionDao = new ComGPSPositionDao(gPSPositionDaoConfig, this);
		gPSMobjectBugResultDao = new GPSMobjectBugResultDao(gPSMobjectBugResultDaoConfig, this);
		gpsMobjectBugResultForFilesDao = new GPSMobjectBugResultForFilesDao(gpsMobjectBugResultForFilesDaoConfig, this);
		
        registerDao(GPSXXTempTask.class, GPSXXTempTaskDao);
        registerDao(ComGPSPosition.class, gPSPositionDao);
		registerDao(GPSMobjectBugResult.class, gPSMobjectBugResultDao);
		registerDao(GPSMobjectBugResultForFiles.class,gpsMobjectBugResultForFilesDao);
    }
    
    public void clear() {
        tempGPSTask_IDDaoConfig.getIdentityScope().clear();
        gPSPositionDaoConfig.getIdentityScope().clear();
		gPSMobjectBugResultDaoConfig.getIdentityScope().clear();
		gpsMobjectBugResultForFilesDaoConfig.getIdentityScope().clear();
    }

    public GPSXXTempTaskDao getGPSXXTempTaskDao() {
        return GPSXXTempTaskDao;
    }

    public ComGPSPositionDao getGPSPositionDao() {
        return gPSPositionDao;
    }
    
	public GPSMobjectBugResultDao getGPSMobjectBugResultDao() {
		return gPSMobjectBugResultDao;
	}
	
	public GPSMobjectBugResultForFilesDao getGPSMobjectBugResultForFilesDao() {
		return gpsMobjectBugResultForFilesDao;
	}

}
